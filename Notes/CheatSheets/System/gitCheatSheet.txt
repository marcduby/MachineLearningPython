

tagging:
--------
  - git tag -a v1.4 -m "my version 1.4"
  - git tag                         # lists the tags
    - git push --tags
  - git push origin v0.92_generate


merging changes from another branch:
------------------------------------
  - git checkout from_branch
  - git pull
  - git checkout to_branch
  - git pull
  - git merge from_branch
  - git push

  - git merge --abort 

new branch:
-----------
  - git checkout -b <branch_name>
  - git push -u origin ky_code_documentation

github ssh issue:
-----------------
git@github.com:broadinstitute/genetics-kp-dev.git

diff:
-----
   - git diff HEAD^^ HEAD main.c
   - git diff HEAD~2 HEAD -- main.c

info:
-----
  - git rev-parse --abbrev-ref HEAD   (find out what branch you're on)

github actions:
---------------
  - create yaml file in .github/workflows

    name: ITRB Cloud - Production Tests
    on: 
      push:
      schedule:
      - cron: '00 6,12,20 * * *'   # 3 times a day

    jobs:
      build:

        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v2
        - run: |
            git fetch --prune --unshallow
        - name: Set up Python 3.8
          uses: actions/setup-python@v1
          with:
            python-version: 3.8
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
        - name: Test with pytest
          run: |
            pip install pytest
            pip install requests
            export PYTHONPATH=python-flask-server
            pytest python-flask-server/tests/cloud/test_itrb_prod.py


- git stash
  - git stash pop (to apply to code and delete stashed changes)
  
- remove file from add
  - git reset filename.txt

- remove DS_store files
  - find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch

- update branch from master
  - git checkout <branch>
  - git merge origin/master
  
- reset file
  - git reset foo/bar.txt
  - git checkout foo/bar.txt
  
- git flow
  - during rebase step, command is 'pick <hash>'. with hash being collapsed commit of all branch commits
  
- git tag (2 steps)
  - git tag <tag>
  - git push origin <tag>
  
- Starting a new feature as a branch:
  - git checkout -b <branch_name>
    - ie: git checkout ky_code_documentation
  - git add <new files, if any>
  - git commit -av
  - git push -u origin <branch_name>
    - e.g. git push -u origin ky_code_documentation
  
- authentication
  - for information -> checks that key is installed correctly for that VM
    - ssh -T git@github.com
  - for adding read-only user for repository checkout
    - ssh-keygen -t rsa -b 4096 -C "dude@company.org"
      - then type in pass pharse (pass phrase will be linked to key that is given to github account, not linked to individual repositories)
    - for mac
      - eval "$(ssh-agent -s)"
      - ssh-add ~/.ssh/id_rsa_dude (name of file created in first step)
      - cat ~/.ssh/id_rsa_dude.pub (public key to provide github)
    - for linux
      - copy .ssh/id_rsa.pub to mac, then pbcopy < <copied file>
      - add to github account under settings/ssh keys
      
- switch repo so use ssh (for 2FA)
  - git remote set-url origin git@github.com:company/dig-services-permissions.git
  
- add command line repo
  echo "# dig-genome-services" >> README.md
  git init
  git add README.md
  git commit -m "first commit"
  git remote add origin https://github.com/broadinstitute/dig-genome-services.git
  git push -u origin master
